name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["8.2"]
        dependency-stability: [prefer-stable]

    name: P${{ matrix.php-versions }} - Laravel - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system }}

    services:
      mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
          - '${{ env.FORWARD_DB_PORT }}:3306'
        env:
          MYSQL_ROOT_PASSWORD: '${{ secrets.DB_PASSWORD }}'
          MYSQL_ROOT_HOST: '%'
          MYSQL_DATABASE: '${{ secrets.DB_DATABASE }}'
          MYSQL_USER: '${{ secrets.DB_USERNAME }}'
          MYSQL_PASSWORD: '${{ secrets.DB_PASSWORD }}'
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
          - 'sail-mysql:/var/lib/mysql'
          - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Set up environment variables
        run: |
          echo "DB_CONNECTION=mysql" >> $GITHUB_ENV
          echo "DB_HOST=mysql" >> $GITHUB_ENV
          echo "DB_PORT=${{ env.FORWARD_DB_PORT }}" >> $GITHUB_ENV
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "SESSION_DRIVER=array" >> $GITHUB_ENV

      - name: Validate Composer File
        run: composer validate --no-check-all

      - name: Install Dependencies (Laravel)
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: |
          composer config platform.php 8.2
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run Migrations
        env:
          SESSION_DRIVER: array
        run: php artisan migrate

      - name: Install Dependencies (Node.js)
        run: npm install

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: '${{ secrets.DB_DATABASE }}'
        run: vendor/bin/pest --coverage-clover=clover.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
