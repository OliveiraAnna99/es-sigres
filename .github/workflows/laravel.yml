name: Laravel Docker Workflow
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: sigres
          MYSQL_USER: sail
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get install docker-compose -y

      - name: Build and run Docker containers
        run: |
          docker-compose up -d --build

      - name: Install dependencies
        run: |
          docker-compose exec app composer install --no-interaction

      - name: Generate application key
        run: |
          docker-compose exec app php artisan key:generate

      - name: Set up environment variables
        run: |
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=${{ secrets.APP_DEBUG }}" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          # Adicione outras variáveis de ambiente, se necessário

      - name: Run database migrations
        run: |
          docker-compose exec app php artisan migrate --no-interaction

      - name: Execute tests (Unit and Feature tests) via PestPHP
        env:
          SESSION_DRIVER: array
          DB_CONNECTION: mysql
          DB_DATABASE: ":memory:"
        run: vendor/bin/pest --coverage-clover=clover.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
